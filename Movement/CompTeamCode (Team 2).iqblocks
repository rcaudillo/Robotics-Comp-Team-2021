{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"broadcast_msg\" id=\"{!e/N32C*tQfLI/uSH^S\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable><variable type=\"broadcast_msg\" id=\"MG,z/;iW,/(h1=l7+)l*\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">stack_ready_for_pick</variable><variable type=\"boolean\" id=\"=c53hSGKD=@Y1dIa2oU#\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">isStarted</variable><variable type=\"boolean\" id=\"^-PtCR3uQM.(nDD$)z4O\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">program_running</variable><variable type=\"\" id=\"3Avf1XhPP/QxP+~,A||_\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">time_elapsed</variable></variables><block type=\"procedures_definition\" id=\"Nse%4*N,yiJ=`]PWeoSs\" x=\"490\" y=\"-770\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"i6Iymh_fw[blzj1Ky|A:\"><mutation proccode=\"Setup Config\" proceduredefid=\"i6Iymh_fw[blzj1Ky|A:\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_other_comment\" id=\"07MU?XW(a^r=iWa=G0QB\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"XbQXlJQm05Ao:QqQK*?,\"><field name=\"comment\">Config</field></shadow></value><next><block type=\"iq_looks_print\" id=\"d#q(KshuXPdH0X37PQ;+\"><value name=\"DATA\"><shadow type=\"text\" id=\"#8A#V8Ec$/`JT2E3;2|V\"><field name=\"TEXT\">Wating For Start ...</field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"XZh.]~QhB-;#0u/$)Q/k\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"cT?0q{*H(qk=P{.=ynNs\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"wq]P|ZcWGKov86d:PHo~\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print\" id=\"hLdT=Z!LoFoW2BTkia2L\"><value name=\"DATA\"><shadow type=\"text\" id=\"lTMT*P%gvDUhE#@/*@!H\"><field name=\"TEXT\">Press CHECK on brain</field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"#-_`sJds5#7lXX|5o|uT\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"n);8PjIjn/FMHemj%fDp\"><field name=\"NUM\">4</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"/.oQh/a-/=,]^AfE8n}^\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print\" id=\"i}jax98gO!s=@Q2.6uP#\"><value name=\"DATA\"><shadow type=\"text\" id=\"5;T6)!^7ikc4Vym$Ah^I\"><field name=\"TEXT\">to start program</field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"yHDFEGQuDW=p0`Ksb}~L\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"KDUmt-uTnFY-AT:MU6aa\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"Lg.|r;~LnhP719F2CYvX\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"L1;2pp6:Z!WvENXD9,UH\"><field name=\"VARIABLE\" id=\"=c53hSGKD=@Y1dIa2oU#\" variabletype=\"boolean\">isStarted</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"l.S0;dMpnUNWnU=4EgM4\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"a@8=d!-,)OB~r$0RQc!3\"><field name=\"VARIABLE\" id=\"^-PtCR3uQM.(nDD$)z4O\" variabletype=\"boolean\">program_running</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"dIBGE~xBM{fN~M:e.^Ga\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"..xx@|U~C^%A$+w/MQ0A\"><field name=\"VARIABLE\" id=\"3Avf1XhPP/QxP+~,A||_\" variabletype=\"\">time_elapsed</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"99cat.b8vlj;d0~Fy}%6\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"procedures_definition\" id=\"($IYRsNsVCjg{{EgTy4W\" x=\"-50\" y=\"-450\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"[kMQ[)pPJ@aXC.cRVUCZ\"><mutation proccode=\"Update Time By %n Second(s)\" proceduredefid=\"[kMQ[)pPJ@aXC.cRVUCZ\" argumentids=\"[&quot;_1$DVoARF1);!p|8jD1}&quot;]\" argumentnames=\"[&quot;Amount/Sec&quot;]\" argumentdefaults=\"[&quot;todo&quot;,&quot;todo&quot;,&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"_1$DVoARF1);!p|8jD1}\"><shadow type=\"argument_reporter_number\" id=\"H8lX|bSves,pk`=PB0c_\"><mutation funcname=\"Update_Time_By_Amount/Sec_Second(s)\" argumentid=\"_1$DVoARF1);!p|8jD1}\" proceduredefid=\"[kMQ[)pPJ@aXC.cRVUCZ\"></mutation><field name=\"VALUE\">Amount/Sec</field></shadow></value></shadow></statement><next><block type=\"iq_other_comment\" id=\"k[%kiU(PCVjxkf];!Rm_\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"x?LrMX+4mYo-HbZ6U,wO\"><field name=\"comment\">Addes TIme To Elapsed time by senconds</field></shadow></value><next><block type=\"iq_control_wait\" id=\"0N,$_{i)_}w)o,CbY=xW\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"2(s^,=1-pU/R-Ti[y+SK\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_variables_set_variable\" id=\"T)//y$=fGj@aWW,yBsw.\"><field name=\"VARIABLE\" id=\"3Avf1XhPP/QxP+~,A||_\" variabletype=\"\">time_elapsed</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"mgF_tDKANN(06G?@}^mO\"><field name=\"NUM\">0</field></shadow><block type=\"iq_operator_add\" id=\"e=n|rY[E7YA5h}uM7PCP\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"OnHmq+(AoM6e9D)#YbK]\"><field name=\"NUM\"></field></shadow><block type=\"iq_variables_variable\" id=\"M%g)v:(N??.h?eX#1:G~\"><field name=\"VARIABLE\" id=\"3Avf1XhPP/QxP+~,A||_\" variabletype=\"\">time_elapsed</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"klrrS1V$fBp}CDDf5v.H\"><field name=\"NUM\">1</field></shadow><block type=\"argument_reporter_number\" id=\"x;F;O:u7b/8i7RFcQYl$\"><mutation funcname=\"Update_Time_By_Amount/Sec_Second(s)\" argumentid=\"_1$DVoARF1);!p|8jD1}\" proceduredefid=\"[kMQ[)pPJ@aXC.cRVUCZ\"></mutation><field name=\"VALUE\">Amount/Sec</field></block></value></block></value></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-50\" y=\"30\"><next><block type=\"procedures_call\" id=\"rsu:2cb7kOww],i1kd%d\"><mutation proccode=\"Setup Config\" proceduredefid=\"qy|8eW#cn_`LA6l~P+[2\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_other_comment\" id=\"=YfyfGk*EEQ9mm$hI9gN\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"T6kxOYD,g/9Y/{du]Dn{\"><field name=\"comment\">Start Program</field></shadow></value><next><block type=\"iq_control_while\" id=\"(kkTt;g.@ug{H})WwuQ!\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"qic7q,kz,wgb9sfj(rj#\"><field name=\"VARIABLE\" id=\"=c53hSGKD=@Y1dIa2oU#\" variabletype=\"boolean\">isStarted</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_stop_driving\" id=\"jYJ*,/5{/[%XDIiiK7k9\"><next><block type=\"iq_control_if_then\" id=\"JIl;KsgqB5vD3=O.R-7S\"><value name=\"CONDITION\"><block type=\"iq_sensing_brain_button_pressed\" id=\"_``+LtC^pQ2SF3?M[Vjn\"><field name=\"BUTTON\">Check</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_boolean_variable\" id=\"MlwCv{MI-/!8LsAc3R*o\"><field name=\"VARIABLE\" id=\"=c53hSGKD=@Y1dIa2oU#\" variabletype=\"boolean\">isStarted</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"7Wnlz)S=[9Xpi9ezu!FK\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"y}un52`/td(_34GK[lK#\"><field name=\"VARIABLE\" id=\"^-PtCR3uQM.(nDD$)z4O\" variabletype=\"boolean\">program_running</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"y%xD5[A[lZfaJM;`Q84P\"><field name=\"VALUE\">true</field></shadow></value></block></next></block></statement></block></next></block></statement><next><block type=\"iq_looks_clear_all_rows\" id=\"yUz)XapuJV;$(3f($C4A\"><next><block type=\"iq_other_comment\" id=\"X/N[(94[|%#4`d/6@^sP\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"Ol`TlYi4Tfsk1!=t5/2u\"><field name=\"comment\">Main Program</field></shadow></value><next><block type=\"iq_control_while\" id=\"Z(moUd#%[sA|wVhYIVu8\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"O_3;WuzVM4?yGz}@7FX1\"><field name=\"VARIABLE\" id=\"^-PtCR3uQM.(nDD$)z4O\" variabletype=\"boolean\">program_running</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"E2_2#Q2Jt]_##s7ltI}v\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"nbH_}r}tA(S6E)K+3f1H\"><field name=\"comment\">Set Stats</field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"vhL?sGm0`f@:A?!GN9,I\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"{1rSZ@_x,0/93s.zeod-\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"r_sYy,$|/Uy?j%a0s78z\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print\" id=\"kXix5aFfB@pj7p!-ONC}\"><value name=\"DATA\"><shadow type=\"text\" id=\"8Lsg(`maxc+{m{x+U!Gz\"><field name=\"TEXT\">Bumper -- </field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"Tgt;2uVh5%0dq^d9_1{k\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"^Qq5+v5a,E?-Z!.}QAy$\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\",Vx]SZw;5uJ1kNAxZ}[O\"><field name=\"NUM\">11</field></shadow></value><next><block type=\"iq_control_if_then_else\" id=\"Rf~K]V7L^N+~FX$A_3t_\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_bumper\" id=\"J9KH89;1C6^wAA{i`?bv\"><field name=\"BUMPER\">stack_bumper</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_print\" id=\"BiFv=cm|Xo[OQt9#;:|L\"><value name=\"DATA\"><shadow type=\"text\" id=\"e1lB%7E[Io{lGB4`JYz0\"><field name=\"TEXT\">True</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_looks_print\" id=\"^h0W|t}:uG:)Qz^5@WK(\"><value name=\"DATA\"><shadow type=\"text\" id=\"B]#q5Uh;%N|R5qj?n{hy\"><field name=\"TEXT\">False</field></shadow></value></block></statement><next><block type=\"iq_looks_set_cursor\" id=\"0XaG-?MFu7*{J#5z[A_)\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"JEa(5dKTh[DrlXSV}~zh\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"S+58G3DJk3#jo|dqGXL!\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print\" id=\"F7bE3Fp.s}EqeDRwDUoi\"><value name=\"DATA\"><shadow type=\"text\" id=\"t[i{z4:/@mH{sYYlB3ih\"><field name=\"TEXT\">Time (SEC) --</field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"L7imk@0`]9Yd%9Q,|5CA\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"A@)5N7W)+Q[hd5ign+w(\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"4+6kWp(KNM/Szz8w3J)0\"><field name=\"NUM\">15</field></shadow></value><next><block type=\"iq_looks_print\" id=\"alWIj}o@,ZZZe]1^`bP9\"><value name=\"DATA\"><shadow type=\"text\" id=\"{+aA4[3d[Z!R{u:id{P)\"><field name=\"TEXT\">Hello</field></shadow><block type=\"iq_variables_variable\" id=\"QZdwQz-d3SiW(rOWlCdn\"><field name=\"VARIABLE\" id=\"3Avf1XhPP/QxP+~,A||_\" variabletype=\"\">time_elapsed</field></block></value><next><block type=\"procedures_call\" id=\"LbF$bqC]*8d(Y|oaif(3\"><mutation proccode=\"Update Time By %n Second(s)\" proceduredefid=\"L7nC`%[c#(g!,PkAjX1f\" argumentids=\"[&quot;_1$DVoARF1);!p|8jD1}&quot;]\" warp=\"false\"></mutation><value name=\"_1$DVoARF1);!p|8jD1}\"><shadow type=\"math_number\" id=\"ihbt+f++)KN6^/`F]mkr\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_clear_all_rows\" id=\"T.TX#uHpF{[%R)imp2Y:\"><next><block type=\"iq_looks_set_cursor\" id=\"|E:dl*}6xO^GeQ%63#tv\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"%?Z:3:]?[fL6|G%.=+-/\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"01{@:[Anc-`6)YknmB,q\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_other_comment\" id=\"sq4cm2)[)n2N~O2-{j`-\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"LZN()bM/%)cR/o843c`~\"><field name=\"comment\">OTHER</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","drive":"split"},"triportSourcePort":22},{"port":[1,2,3],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"smart","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm"},"triportSourcePort":22},{"port":[4],"name":"stack_bumper","customName":true,"deviceType":"Bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"","appVersion":"","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"iq_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ncontroller Controller = controller();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT2, 1, true);\ngyro TurnGyroSmart = gyro(PORT3, true);\nsmartdrive Drivetrain= smartdrive(LeftDriveSmart, RightDriveSmart, TurnGyroSmart,200);\n\nbumper stack_bumper = bumper(PORT4);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating Gyro\");\n  while (TurnGyroSmart.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns to the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA + AxisC\n      // right = AxisA - AxisC\n      int drivetrainLeftSideSpeed = Controller.AxisA.position() + Controller.AxisC.position();\n      int drivetrainRightSideSpeed = Controller.AxisA.position() - Controller.AxisC.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\n\n// Include the IQ Library\n#include \"iq_cpp.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0;\nvoid myblockfunction_Setup_Config();\nvoid myblockfunction_Update_Time_By_Amount_Sec_Second_s_(double myblockfunction_Update_Time_By_Amount_Sec_Second_s___Amount_Sec);\n\nfloat time_elapsed;\n\nbool isStarted, program_running;\n\nvex::event message1 = vex::event();\nvex::event stack_ready_for_pick = vex::event();\n\nvoid myblockfunction_Setup_Config() {\n  // Config\n  Brain.Screen.print(\"Wating For Start ...\");\n  Brain.Screen.setCursor(3, 1);\n  Brain.Screen.print(\"Press CHECK on brain\");\n  Brain.Screen.setCursor(4, 1);\n  Brain.Screen.print(\"to start program\");\n  Brain.Screen.setCursor(1, 1);\n  isStarted = true;\n  program_running = false;\n  time_elapsed = 0.0;\n}\n\nvoid myblockfunction_Update_Time_By_Amount_Sec_Second_s_(double myblockfunction_Update_Time_By_Amount_Sec_Second_s___Amount_Sec) {\n  // Addes TIme To Elapsed time by senconds\n  wait(1.0, seconds);\n  time_elapsed = time_elapsed + myblockfunction_Update_Time_By_Amount_Sec_Second_s___Amount_Sec;\n}\n\nconst char* printToBrain_numberFormat() {\n  switch(Brain_precision){\n  case 0:  return \"%.0f\";\n  case 1:  return \"%.1f\";\n  case 2:  return \"%.2f\";\n  case 3:  return \"%.3f\";\n  case -1: return \"%f\";\n  default: return \"%f\";\n  }\n}\n\nint whenStarted1() {\n  myblockfunction_Setup_Config();\n  // Start Program\n  while (isStarted) {\n    Drivetrain.stop();\n    if (Brain.buttonCheck.pressing()) {\n      isStarted = false;\n      program_running = true;\n    }\n  wait(20, msec);\n  }\n  Brain.Screen.clearScreen();\n  // Main Program\n  while (program_running) {\n    // Set Stats\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"Bumper -- \");\n    Brain.Screen.setCursor(1, 11);\n    if (stack_bumper.pressing()) {\n      Brain.Screen.print(\"True\");\n    }\n    else {\n      Brain.Screen.print(\"False\");\n    }\n    Brain.Screen.setCursor(2, 1);\n    Brain.Screen.print(\"Time (SEC) --\");\n    Brain.Screen.setCursor(2, 15);\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(time_elapsed));\n    myblockfunction_Update_Time_By_Amount_Sec_Second_s_(1.0);\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    // OTHER\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n  whenStarted1();\n}"}